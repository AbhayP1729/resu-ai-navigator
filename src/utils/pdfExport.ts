
import jsPDF from 'jspdf';
import { ParsedResume, AnalysisResult } from '@/types/resume';

export const generatePDFReport = async (resume: ParsedResume, analysis: AnalysisResult): Promise<void> => {
  const pdf = new jsPDF();
  let yPosition = 20;
  const lineHeight = 7;
  const pageHeight = pdf.internal.pageSize.height;
  
  // Helper function to add text with automatic page breaks
  const addText = (text: string, x: number, fontSize: number = 10, fontStyle: string = 'normal') => {
    if (yPosition > pageHeight - 20) {
      pdf.addPage();
      yPosition = 20;
    }
    
    pdf.setFontSize(fontSize);
    pdf.setFont('helvetica', fontStyle);
    pdf.text(text, x, yPosition);
    yPosition += lineHeight * (fontSize / 10);
  };
  
  // Helper function for multiline text
  const addMultilineText = (text: string, x: number, maxWidth: number, fontSize: number = 10) => {
    const lines = pdf.splitTextToSize(text, maxWidth);
    lines.forEach((line: string) => {
      addText(line, x, fontSize);
    });
  };
  
  // Title
  addText('Resume Analysis Report', 20, 18, 'bold');
  addText(`Generated on ${new Date().toLocaleDateString()}`, 20, 10);
  yPosition += 10;
  
  // Personal Information
  addText('Personal Information', 20, 14, 'bold');
  addText(`Name: ${resume.name}`, 20);
  addText(`Email: ${resume.email}`, 20);
  addText(`Phone: ${resume.phone}`, 20);
  yPosition += 10;
  
  // Overall Score
  addText('Overall Analysis', 20, 14, 'bold');
  addText(`Overall Score: ${analysis.overallScore}/100`, 20, 12, 'bold');
  addText(`Detected Role: ${analysis.detectedRole}`, 20);
  yPosition += 5;
  
  // Individual Scores
  addText('Score Breakdown:', 20, 12, 'bold');
  addText(`Structure: ${analysis.scores.structure}%`, 30);
  addText(`Content Quality: ${analysis.scores.content}%`, 30);
  addText(`Keywords: ${analysis.scores.keywords}%`, 30);
  addText(`Readability: ${analysis.scores.readability}%`, 30);
  yPosition += 10;
  
  // Strengths
  addText('Strengths', 20, 14, 'bold');
  analysis.strengths.forEach((strength, index) => {
    addMultilineText(`${index + 1}. ${strength}`, 30, 150);
  });
  yPosition += 10;
  
  // Weaknesses
  addText('Areas for Improvement', 20, 14, 'bold');
  analysis.weaknesses.forEach((weakness, index) => {
    addMultilineText(`${index + 1}. ${weakness}`, 30, 150);
  });
  yPosition += 10;
  
  // Suggestions
  addText('Actionable Suggestions', 20, 14, 'bold');
  analysis.suggestions.forEach((suggestion, index) => {
    addText(`${index + 1}. ${suggestion.section} (${suggestion.priority} priority)`, 30, 10, 'bold');
    addMultilineText(`Issue: ${suggestion.issue}`, 35, 145, 9);
    addMultilineText(`Recommendation: ${suggestion.recommendation}`, 35, 145, 9);
    yPosition += 3;
  });
  
  // Skill Gaps
  if (analysis.skillGaps.length > 0) {
    yPosition += 10;
    addText('Recommended Skills to Develop', 20, 14, 'bold');
    addMultilineText(analysis.skillGaps.join(', '), 30, 150);
  }
  
  // Skills Summary
  yPosition += 10;
  addText('Current Skills', 20, 14, 'bold');
  addMultilineText(resume.skills.join(', '), 30, 150);
  
  // Work Experience Summary
  if (resume.workExperience.length > 0) {
    yPosition += 10;
    addText('Work Experience Summary', 20, 14, 'bold');
    resume.workExperience.forEach((exp, index) => {
      addText(`${index + 1}. ${exp.position} at ${exp.company}`, 30, 10, 'bold');
      addText(`Duration: ${exp.duration}`, 35, 9);
      if (exp.responsibilities && exp.responsibilities.length > 0) {
        addText('Key Responsibilities:', 35, 9);
        exp.responsibilities.slice(0, 3).forEach(resp => {
          addMultilineText(`â€¢ ${resp}`, 40, 140, 8);
        });
      }
      yPosition += 3;
    });
  }
  
  // Footer
  if (yPosition > pageHeight - 30) {
    pdf.addPage();
    yPosition = 20;
  }
  yPosition = pageHeight - 20;
  pdf.setFontSize(8);
  pdf.setFont('helvetica', 'italic');
  pdf.text('Generated by ResumAI Navigator - AI-Powered Resume Analysis', 20, yPosition);
  
  // Save the PDF
  pdf.save(`resume-analysis-report-${new Date().toISOString().split('T')[0]}.pdf`);
};
